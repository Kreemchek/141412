// –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
const ACQUIRING_RATE = 0.025; // 2.5%
const TAX_RATES = {
    low: 0.02,   // 2%
    medium: 0.05, // 5%
    high: 0.07   // 7%
};

// Telegram Web App –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
let tg = null;
let isTelegramWebApp = false;

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
if (typeof window.Telegram !== 'undefined' && window.Telegram.WebApp) {
    tg = window.Telegram.WebApp;
    isTelegramWebApp = true;
    console.log('Telegram Web App detected');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —á–∏—Å–µ–ª
function formatNumber(num, decimals = 2) {
    return new Intl.NumberFormat('ru-RU', {
        minimumFractionDigits: decimals,
        maximumFractionDigits: decimals
    }).format(num);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–æ–≤
function formatPercent(num, decimals = 2) {
    return formatNumber(num * 100, decimals) + '%';
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ –ø–æ–ª—è –≤–≤–æ–¥–∞
function getInputValue(id) {
    const element = document.getElementById(id);
    const value = parseFloat(element.value) || 0;
    return value;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
function validateInputs() {
    const requiredFields = [
        'units-sold',
        'purchase-price',
        'selling-price'
    ];
    
    let isValid = true;
    
    requiredFields.forEach(fieldId => {
        const element = document.getElementById(fieldId);
        const value = getInputValue(fieldId);
        
        if (value <= 0) {
            element.classList.add('error');
            isValid = false;
        } else {
            element.classList.remove('error');
        }
    });
    
    return isValid;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞—Å—á–µ—Ç–∞
function calculateEconomics() {
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
    if (!validateInputs()) {
        alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏.');
        return;
    }
    
    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–æ—Ä–º—ã
    const data = {
        unitsSold: getInputValue('units-sold'),
        logistics: getInputValue('logistics'),
        fulfillment: getInputValue('fulfillment'),
        wbCommission: getInputValue('wb-commission') / 100, // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –¥–µ—Å—è—Ç–∏—á–Ω—É—é –¥—Ä–æ–±—å
        storageCost: getInputValue('storage-cost'),
        advertising: getInputValue('advertising'),
        purchasePrice: getInputValue('purchase-price'),
        sellingPrice: getInputValue('selling-price'),
        redemptionRate: getInputValue('redemption-rate') / 100 // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –¥–µ—Å—è—Ç–∏—á–Ω—É—é –¥—Ä–æ–±—å
    };
    
    // –†–∞—Å—á–µ—Ç—ã –¥–ª—è –æ–¥–Ω–æ–π –µ–¥–∏–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
    const unitCalculations = calculateUnitEconomics(data);
    
    // –†–∞—Å—á–µ—Ç—ã –¥–ª—è –æ–±—â–µ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞
    const totalCalculations = calculateTotalEconomics(data, unitCalculations);
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    displayResults(unitCalculations, totalCalculations, data);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏
    document.querySelector('.results-section').classList.add('calculated');
}

// –†–∞—Å—á–µ—Ç —é–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∏ –¥–ª—è –æ–¥–Ω–æ–π –µ–¥–∏–Ω–∏—Ü—ã
function calculateUnitEconomics(data) {
    const {
        logistics,
        fulfillment,
        wbCommission,
        storageCost,
        advertising,
        purchasePrice,
        sellingPrice,
        redemptionRate
    } = data;
    
    // –í—ã—Ä—É—á–∫–∞ —Å —É—á–µ—Ç–æ–º –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –≤—ã–∫—É–ø–∞
    const revenue = sellingPrice * redemptionRate;
    
    // –ö–æ–º–∏—Å—Å–∏—è –í–ë
    const wbCommissionAmount = revenue * wbCommission;
    
    // –≠–∫–≤–∞–π—Ä–∏–Ω–≥
    const acquiringAmount = revenue * ACQUIRING_RATE;
    
    // –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
    const totalCosts = purchasePrice + logistics + fulfillment + storageCost + advertising;
    
    // –ù–∞–ª–æ–≥–∏
    const taxes = {
        low: revenue * TAX_RATES.low,
        medium: revenue * TAX_RATES.medium,
        high: revenue * TAX_RATES.high
    };
    
    // –ü—Ä–∏–±—ã–ª—å –¥–æ –Ω–∞–ª–æ–≥–æ–≤
    const profitBeforeTax = revenue - wbCommissionAmount - acquiringAmount - totalCosts;
    
    // –ü—Ä–∏–±—ã–ª—å –ø–æ—Å–ª–µ –Ω–∞–ª–æ–≥–æ–≤
    const profits = {
        low: profitBeforeTax - taxes.low,
        medium: profitBeforeTax - taxes.medium,
        high: profitBeforeTax - taxes.high
    };
    
    // –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å (–ø—Ä–∏–±—ã–ª—å / –≤—ã—Ä—É—á–∫–∞ * 100)
    const margin = revenue > 0 ? (profitBeforeTax / revenue) * 100 : 0;
    
    // –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å (–ø—Ä–∏–±—ã–ª—å / —Å–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å * 100)
    const profitability = totalCosts > 0 ? (profitBeforeTax / totalCosts) * 100 : 0;
    
    return {
        revenue,
        wbCommissionAmount,
        acquiringAmount,
        totalCosts,
        taxes,
        profitBeforeTax,
        profits,
        margin,
        profitability
    };
}

// –†–∞—Å—á–µ—Ç –æ–±—â–µ–π —ç–∫–æ–Ω–æ–º–∏–∫–∏
function calculateTotalEconomics(data, unitCalculations) {
    const { unitsSold } = data;
    
    return {
        totalRevenue: unitCalculations.revenue * unitsSold,
        totalWbCommission: unitCalculations.wbCommissionAmount * unitsSold,
        totalAcquiring: unitCalculations.acquiringAmount * unitsSold,
        totalCosts: unitCalculations.totalCosts * unitsSold,
        totalTaxes: {
            low: unitCalculations.taxes.low * unitsSold,
            medium: unitCalculations.taxes.medium * unitsSold,
            high: unitCalculations.taxes.high * unitsSold
        },
        totalProfitBeforeTax: unitCalculations.profitBeforeTax * unitsSold,
        totalProfits: {
            low: unitCalculations.profits.low * unitsSold,
            medium: unitCalculations.profits.medium * unitsSold,
            high: unitCalculations.profits.high * unitsSold
        }
    };
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram
function initTelegramWebApp() {
    if (isTelegramWebApp && tg) {
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        tg.ready();
        tg.expand();
        
        // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É Telegram
        document.body.classList.add('telegram-webapp');
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
        tg.MainButton.setText('–ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏');
        tg.MainButton.show();
        tg.MainButton.onClick(shareResults);
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        tg.BackButton.show();
        tg.BackButton.onClick(() => {
            tg.close();
        });
        
        console.log('Telegram Web App initialized');
        console.log('User:', tg.initDataUnsafe.user);
    }
}

function shareResults() {
    if (!isTelegramWebApp || !tg) return;
    
    const results = getCurrentResults();
    const message = formatResultsForSharing(results);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ Telegram
    tg.sendData(JSON.stringify({
        type: 'unit_economics_results',
        data: results,
        message: message
    }));
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
    tg.showAlert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!');
}

function getCurrentResults() {
    return {
        timestamp: new Date().toLocaleString('ru-RU'),
        inputs: {
            unitsSold: getInputValue('units-sold'),
            logistics: getInputValue('logistics'),
            fulfillment: getInputValue('fulfillment'),
            wbCommission: getInputValue('wb-commission'),
            storageCost: getInputValue('storage-cost'),
            advertising: getInputValue('advertising'),
            purchasePrice: getInputValue('purchase-price'),
            sellingPrice: getInputValue('selling-price'),
            redemptionRate: getInputValue('redemption-rate')
        },
        results: {
            margin: document.getElementById('margin').textContent,
            profitability: document.getElementById('profitability').textContent,
            profit5: document.getElementById('profit-5').textContent,
            profit7: document.getElementById('profit-7').textContent,
            profit2: document.getElementById('profit-2').textContent
        }
    };
}

function formatResultsForSharing(results) {
    const { inputs, results: calcResults } = results;
    
    return `üìä *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—á–µ—Ç–∞ —é–Ω–∏—Ç-—ç–∫–æ–Ω–æ–º–∏–∫–∏*

üí∞ *–û—Å–Ω–æ–≤–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:*
‚Ä¢ –ü—Ä–æ–¥–∞–Ω–æ –µ–¥–∏–Ω–∏—Ü: ${inputs.unitsSold}
‚Ä¢ –¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏: ${inputs.sellingPrice} —Ä—É–±.
‚Ä¢ –ó–∞–∫—É–ø–æ—á–Ω–∞—è —Ü–µ–Ω–∞: ${inputs.purchasePrice} —Ä—É–±.
‚Ä¢ –ö–æ–º–∏—Å—Å–∏—è –í–ë: ${inputs.wbCommission}%

üìà *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã:*
‚Ä¢ –ú–∞—Ä–∂–∏–Ω–∞–ª—å–Ω–æ—Å—Ç—å: ${calcResults.margin}
‚Ä¢ –†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å: ${calcResults.profitability}
‚Ä¢ –ü—Ä–∏–±—ã–ª—å (5%): ${calcResults.profit5}
‚Ä¢ –ü—Ä–∏–±—ã–ª—å (7%): ${calcResults.profit7}
‚Ä¢ –ü—Ä–∏–±—ã–ª—å (2%): ${calcResults.profit2}

ü§ñ *–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä:* @MaksimovWB`;
}

// –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function displayResults(unitCalculations, totalCalculations, data) {
    // –ù–∞–ª–æ–≥–∏
    document.getElementById('tax-5').textContent = formatNumber(unitCalculations.taxes.medium) + ' —Ä—É–±.';
    document.getElementById('tax-7').textContent = formatNumber(unitCalculations.taxes.high) + ' —Ä—É–±.';
    document.getElementById('tax-2').textContent = formatNumber(unitCalculations.taxes.low) + ' —Ä—É–±.';
    
    // –ü—Ä–∏–±—ã–ª—å
    document.getElementById('profit-5').textContent = formatNumber(unitCalculations.profits.medium) + ' —Ä—É–±.';
    document.getElementById('profit-7').textContent = formatNumber(unitCalculations.profits.high) + ' —Ä—É–±.';
    document.getElementById('profit-2').textContent = formatNumber(unitCalculations.profits.low) + ' —Ä—É–±.';
    
    // –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
    document.getElementById('margin').textContent = formatPercent(unitCalculations.margin / 100);
    document.getElementById('profitability').textContent = formatPercent(unitCalculations.profitability / 100);
    
    // –°–≤–æ–¥–∫–∞ –ø–æ –µ–¥–∏–Ω–∏—Ü–µ —Ç–æ–≤–∞—Ä–∞
    const summaryElement = document.getElementById('unit-summary');
    summaryElement.innerHTML = `
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">
            <div>
                <strong>–í—ã—Ä—É—á–∫–∞ —Å –µ–¥–∏–Ω–∏—Ü—ã:</strong><br>
                ${formatNumber(unitCalculations.revenue)} —Ä—É–±.
            </div>
            <div>
                <strong>–°–µ–±–µ—Å—Ç–æ–∏–º–æ—Å—Ç—å –µ–¥–∏–Ω–∏—Ü—ã:</strong><br>
                ${formatNumber(unitCalculations.totalCosts)} —Ä—É–±.
            </div>
        </div>
        <div style="display: grid; grid-template-columns: 1fr 1fr; gap: 15px; margin-bottom: 15px;">
            <div>
                <strong>–ö–æ–º–∏—Å—Å–∏—è –í–ë:</strong><br>
                ${formatNumber(unitCalculations.wbCommissionAmount)} —Ä—É–±.
            </div>
            <div>
                <strong>–≠–∫–≤–∞–π—Ä–∏–Ω–≥:</strong><br>
                ${formatNumber(unitCalculations.acquiringAmount)} —Ä—É–±.
            </div>
        </div>
        <div style="background: rgba(255,255,255,0.7); padding: 15px; border-radius: 10px; margin-top: 15px;">
            <strong>–û–±—â–∞—è —Å–≤–æ–¥–∫–∞ (${data.unitsSold} –µ–¥–∏–Ω–∏—Ü):</strong><br>
            ‚Ä¢ –û–±—â–∞—è –≤—ã—Ä—É—á–∫–∞: ${formatNumber(totalCalculations.totalRevenue)} —Ä—É–±.<br>
            ‚Ä¢ –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã: ${formatNumber(totalCalculations.totalCosts)} —Ä—É–±.<br>
            ‚Ä¢ –ü—Ä–∏–±—ã–ª—å –¥–æ –Ω–∞–ª–æ–≥–æ–≤: ${formatNumber(totalCalculations.totalProfitBeforeTax)} —Ä—É–±.<br>
            ‚Ä¢ –õ—É—á—à–∞—è –ø—Ä–∏–±—ã–ª—å (2%): ${formatNumber(totalCalculations.totalProfits.low)} —Ä—É–±.
        </div>
    `;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Ñ–æ—Ä–º—ã
function clearForm() {
    const inputs = document.querySelectorAll('input[type="number"]');
    inputs.forEach(input => {
        input.value = '';
        input.classList.remove('error');
    });
    
    // –û—á–∏—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    const resultElements = document.querySelectorAll('.value');
    resultElements.forEach(element => {
        if (element.id) {
            element.textContent = '0.00 —Ä—É–±.';
        }
    });
    
    document.getElementById('margin').textContent = '0.00%';
    document.getElementById('profitability').textContent = '0.00%';
    document.getElementById('unit-summary').innerHTML = '<p>–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞</p>';
    
    document.querySelector('.results-section').classList.remove('calculated');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
function exportResults() {
    const results = {
        timestamp: new Date().toLocaleString('ru-RU'),
        inputs: {
            unitsSold: getInputValue('units-sold'),
            logistics: getInputValue('logistics'),
            fulfillment: getInputValue('fulfillment'),
            wbCommission: getInputValue('wb-commission'),
            storageCost: getInputValue('storage-cost'),
            advertising: getInputValue('advertising'),
            purchasePrice: getInputValue('purchase-price'),
            sellingPrice: getInputValue('selling-price'),
            redemptionRate: getInputValue('redemption-rate')
        },
        results: {
            margin: document.getElementById('margin').textContent,
            profitability: document.getElementById('profitability').textContent,
            profit5: document.getElementById('profit-5').textContent,
            profit7: document.getElementById('profit-7').textContent,
            profit2: document.getElementById('profit-2').textContent
        }
    };
    
    const dataStr = JSON.stringify(results, null, 2);
    const dataBlob = new Blob([dataStr], {type: 'application/json'});
    
    const link = document.createElement('a');
    link.href = URL.createObjectURL(dataBlob);
    link.download = `unit-economics-${new Date().toISOString().split('T')[0]}.json`;
    link.click();
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', function() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram Web App
    initTelegramWebApp();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–∞—Å—á–µ—Ç –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ø–æ–ª–µ–π
    const inputs = document.querySelectorAll('input[type="number"]');
    inputs.forEach(input => {
        input.addEventListener('input', function() {
            // –£–±–∏—Ä–∞–µ–º –∫–ª–∞—Å—Å –æ—à–∏–±–∫–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ
            this.classList.remove('error');
        });
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter –≤ –ø–æ–ª—è—Ö –≤–≤–æ–¥–∞
    inputs.forEach(input => {
        input.addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                calculateEconomics();
            }
        });
    });
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    const inputSection = document.querySelector('.input-section');
    const buttonContainer = document.createElement('div');
    buttonContainer.style.cssText = 'display: flex; gap: 10px; margin-top: 20px;';
    
    const clearBtn = document.createElement('button');
    clearBtn.textContent = '–û—á–∏—Å—Ç–∏—Ç—å';
    clearBtn.className = 'calculate-btn';
    clearBtn.style.cssText = 'background: #6c757d; flex: 1;';
    clearBtn.onclick = clearForm;
    
    const exportBtn = document.createElement('button');
    exportBtn.textContent = '–≠–∫—Å–ø–æ—Ä—Ç';
    exportBtn.className = 'calculate-btn';
    exportBtn.style.cssText = 'background: #28a745; flex: 1;';
    exportBtn.onclick = exportResults;
    
    buttonContainer.appendChild(clearBtn);
    buttonContainer.appendChild(exportBtn);
    inputSection.appendChild(buttonContainer);
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å –ø—Ä–∏–º–µ—Ä–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
function loadExampleData() {
    document.getElementById('units-sold').value = '100';
    document.getElementById('logistics').value = '25.50';
    document.getElementById('fulfillment').value = '15.00';
    document.getElementById('wb-commission').value = '15.5';
    document.getElementById('storage-cost').value = '5.00';
    document.getElementById('advertising').value = '50.00';
    document.getElementById('purchase-price').value = '200.00';
    document.getElementById('selling-price').value = '450.00';
    document.getElementById('redemption-rate').value = '85';
    
    calculateEconomics();
}

// –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–∏–º–µ—Ä–∞
document.addEventListener('DOMContentLoaded', function() {
    // –ù–∞—Ö–æ–¥–∏–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–Ω–æ–ø–æ–∫
    const buttonsContainer = document.querySelector('.header-buttons');
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä"
    const exampleBtn = document.createElement('button');
    exampleBtn.textContent = '–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä';
    exampleBtn.style.cssText = `
        background: #3b82f6;
        color: white;
        border: none;
        padding: 10px 16px;
        border-radius: 8px;
        cursor: pointer;
        font-weight: 500;
        margin-top: 0;
        margin-left: 0;
        transition: all 0.2s ease;
        font-size: 0.875rem;
        min-height: 44px;
        display: inline-flex;
        align-items: center;
        flex: 1;
        justify-content: center;
    `;
    exampleBtn.onclick = loadExampleData;
    exampleBtn.onmouseover = function() {
        this.style.background = '#2563eb';
    };
    exampleBtn.onmouseout = function() {
        this.style.background = '#3b82f6';
    };
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
    buttonsContainer.appendChild(exampleBtn);
});
